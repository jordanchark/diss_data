library(ggplot2)
library(dplyr)
library(reshape2)

pres <- read.table(file = 'pres_ext.tsv', sep = '\t', header = TRUE)
pres$tense <- "present"
past <- read.table(file = 'past_ext.tsv', sep = '\t', header = TRUE)
past$tense <- "past"

pres$tense <- "present"
past$tense <- "past"

pres_sub <- pres %>% filter(str_detect(label, "SUB"))
pres_mat <- pres %>% filter(str_detect(label, "MAT"))
pres_inf <- pres %>% filter(str_detect(label, "INF"))

pres_sub$clause_type <- "IP-SUB"
pres_mat$clause_type <- "IP-MAT"
pres_inf$clause_type <- "IP-INF"

pres <- rename(pres, "context" = "label")
past <- rename(past, "context" = "label")

pres <- rename(pres, "date" = "year")
past <- rename(past, "date" = "year")

#Frequentize from Kauhanen cre library

frequentize <- function(data) {
  dates <- unique(data$date)
  contexts <- unique(data$context)
  out <- expand.grid(date=dates, context=contexts, applications=0, nonapplications=0, N=0, frequency=0)
  
  for (i in 1:nrow(out)) {
    df <- data[data$date==out[i,]$date & data$context==out[i,]$context, ]
    out[i,]$applications <- sum(df$response)
    out[i,]$N <- length(df$response)
    out[i,]$nonapplications <- out[i,]$N - out[i,]$applications
    out[i,]$frequency <- out[i,]$applications / out[i,]$N
  }
  return(out) 
}

rm(frequentize)
#Now we simplify 'context' 
pres$context <- gsub(pattern = "^([^-=]*-[^-=]*)(-|=[^-]*|$).*", "\\1", pres$context)
past$context <- gsub(pattern = "^([^-=]*-[^-=]*)(-|=[^-]*|$).*", "\\1", past$context)

str(pres)

combined <- rbind(pres, past)

f_pres_ct <- frequentize(pres)
f_past_ct <- frequentize(past)

f_ct <- frequentize(combined)

p_pres_ct <- ggplot(f_pres_ct, aes(x = date, y = frequency, color = context)) +
  labs(y = "Freq. of búinn", x = "Period") +
  geom_point(aes(size = applications)) +
  scale_size_area(max_size = 6) +
  scale_color_brewer(palette = "Set1") +
  coord_cartesian(ylim = c(0, 1)) 
print(p_pres_ct)

p_past_ct <- ggplot(f_past_ct, aes(x = date, y = frequency, color = context)) +
  labs(y = "Freq. of búinn", x = "Period") +
  geom_point(aes(size = applications)) +
  scale_size_area(max_size = 6) +
  scale_color_brewer(palette = "Set1") +
  coord_cartesian(ylim = c(0, 1))  
print(p_past_ct)

f_pres_ct_filtered <- f_pres_ct %>%
  mutate(date = as.numeric(date)) %>%
  filter(date > 1600) %>%
  filter(date > 1600, context != "IP-INF", complete.cases(frequency, applications))

f_past_ct_filtered <- f_past_ct %>%
  mutate(date = as.numeric(date)) %>%
  filter(date > 1600)

f_ct_filtered <- f_ct %>%
  mutate(date = as.numeric(date)) %>%
  filter(date > 1600) %>%
  filter(date > 1600, context != "IP-INF", complete.cases(frequency, applications))

p_pres_ct_filtered <- ggplot(f_pres_ct_filtered, aes(x = date, y = frequency, color = context)) +
  labs(y = "Frequency of búinn", x = "Period") +
  geom_point(aes(size = applications)) +
  geom_smooth(method = "glm", se = FALSE) + 
  scale_size_area(max_size = 6) +
  scale_color_brewer(palette = "Set1") +
  coord_cartesian(ylim = c(0, 1))

p_past_ct_filtered <- ggplot(f_past_ct_filtered, aes(x = date, y = frequency, color = context)) +
  labs(y = "Frequency of búinn", x = "Period") +
  geom_point(aes(size = applications)) +
  geom_smooth(method = "glm", se = FALSE) + 
  scale_size_area(max_size = 6) +
  scale_color_brewer(palette = "Set1") +
  coord_cartesian(ylim = c(0, 1))

p_combo <- ggplot(f_ct_filtered, aes(x = date, y = frequency, color = context)) +
  labs(y = "Frequency of búinn", x = "Period") +
  geom_point(aes(size = applications)) +
  geom_smooth(method = "loess", se = FALSE) + 
  scale_size_area(max_size = 6) +
  scale_color_brewer(palette = "Set1") +
  coord_cartesian(ylim = c(0, 1)) +
  facet_wrap(~ context) + theme_minimal()

# Print or plot the graphs
print(p_pres_ct_filtered)
print(p_past_ct_filtered)
print(p_combo)

warnings()

library(viridis)

p_pres_ct_filtered <- ggplot(f_pres_ct_filtered, aes(x = date, y = frequency, color = context)) +
  labs(y = "Frequency of búinn", x = "Period (Present Tense)") +
  geom_point(aes(size = applications)) +
  geom_smooth(method = "glm", se = FALSE) + 
  scale_size_area(max_size = 6) +
  coord_cartesian(ylim = c(0, 1)) +
  facet_wrap(~ context) + theme_minimal()

p_past_ct_filtered <- ggplot(f_past_ct_filtered, aes(x = date, y = frequency, color = context)) +
  labs(y = "Frequency of búinn", x = "Period (Past Tense)") +
  geom_point(aes(size = applications)) +
  geom_smooth(method = "glm", se = FALSE) + 
  scale_size_area(max_size = 6) +
  coord_cartesian(ylim = c(0, 1)) +
  facet_wrap(~ context) + theme_minimal()

print(p_pres_ct_filtered)
print(p_past_ct_filtered)

#Run a simple glm; first for each dataset separately
#No model with context converged for pres

library(lme4)
m1_pres <- glmer(response ~ century + (1 | textid), 
               data = pres, 
               family = binomial)

summary(m1_pres)

plot_model(
  m1_pres,
  type = c("pred"))

m1_past <- glmer(response ~ context * century + (1 | textid), 
                 data = past, 
                 family = binomial)

summary(m1_past)

m2_past <- glmer(response ~ context + century + (1 | textid), 
                 data = past, 
                 family = binomial)

anova(m1_past, m2_past)

plot_model(
  m1_past,
  type = c("est"))

#Plot random effects to

plot_model(
  m1_past,
  type = c("re"))

#Combine the data for an omnibus model
combined_data <- rbind(pres, past)

m1_combined <- glmer(response ~ tense * century+ (1 | textid), 
                 data = combined_data, 
                 family = binomial)

summary(m1_combined)

m2_combined <- glmer(response ~ tense + century + (1 | textid) , 
                     data = combined_data, 
                     family = binomial)

summary(m2_combined)
anova(m1_combined, m2_combined)

plot_model(
  m2_combined,
  type = c("est")) + theme_minimal()

plot_model(
  m2_combined,
  type = c("re")) + theme_minimal()
